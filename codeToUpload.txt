


#include <Bridge.h>
#include <Temboo.h>


const String CLIENT_ID = "809195346670-dfrgertd42o1o3hote0o99s2lnhq1sep.apps.googleusercontent.com";
const String CLIENT_SECRET = "1ZQq2kkqH-WEvA-n7q55oi47";
const String REFRESH_TOKEN = "1/24pDJbU2OnCqaMKqh7fzH1LYFfvZLobyVzzP1gZcjMsMEudVrK5jSpoR30zcRFq6";
const String SPREADSHEET_TITLE = "projectPartTwo";

#define TEMBOO_ACCOUNT "pearseg"  // your Temboo account name 
#define TEMBOO_APP_KEY_NAME "projectPartTwo"  // your Temboo app key name
#define TEMBOO_APP_KEY  "iyXdWUVBqbl83SWN3MgdY19S6YmzPFIz"  // your Temboo app key






const int touchPin = 4;     // the number of the touch pin
const int buzzerPin = 6;      // the number of the buzzer pin

// variables will change:
int touchState = 0;         // variable for reading the tilt status

// Note that for additional security and reusability, you could
// use #define statements to specify these values in a .h file.

// your Gmail username, formatted as a complete email address, eg "bob.smith@gmail.com"
const String GMAIL_USER_NAME = "pearsegorman1995@gmail.com";

// your Gmail App-Specific Password
const String GMAIL_PASSWORD = "myhcfzomndyjetis";

// the email address you want to send the email to, eg "jane.doe@temboo.com"
const String TO_EMAIL_ADDRESS = "pearsegorman18@gmail.com";

boolean success = false; // a flag to indicate whether we've sent the email yet or not


void setup() {
  // initialize the buzzer pin as an output:
  pinMode(buzzerPin, OUTPUT);      
  // initialize the touch pin as an input:
  pinMode(touchPin, INPUT);     

  // for debugging, wait until a serial console is connected
  Serial.begin(9600);
  delay(4000);
  while(!Serial);

  Serial.print("Initializing the bridge...");
  Bridge.begin();
  Serial.println("Done");

  
  
}

void loop()
{
  unsigned long now = millis();
  
  // read the state of the touch value:
  touchState = digitalRead(touchPin);

  

  // check if the touch is close.
  // if it is, the tiltState is HIGH:
  if (touchState == LOW) {     
    // turn buzzer on:    
    digitalWrite(buzzerPin, HIGH);  
  
  ////////////////    EMAIL    //////////////////////////////////////////////////
  
  
  // only try to send the email if we haven't already sent it successfully
  if (!success) {

    Serial.println("Running SendAnEmail...");
  
    TembooChoreo SendEmailChoreo;

    // invoke the Temboo client
    // NOTE that the client must be reinvoked, and repopulated with
    // appropriate arguments, each time its run() method is called.
    SendEmailChoreo.begin();
    
    // set Temboo account credentials
    SendEmailChoreo.setAccountName(TEMBOO_ACCOUNT);
    SendEmailChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);
    SendEmailChoreo.setAppKey(TEMBOO_APP_KEY);

    // identify the Temboo Library choreo to run (Google > Gmail > SendEmail)
    SendEmailChoreo.setChoreo("/Library/Google/Gmail/SendEmail");
 

    // set the required choreo inputs
    // see https://www.temboo.com/library/Library/Google/Gmail/SendEmail/ 
    // for complete details about the inputs for this Choreo

    // the first input is your Gmail email address
    SendEmailChoreo.addInput("Username", GMAIL_USER_NAME);
    // next is your Gmail App-Specific password.
    SendEmailChoreo.addInput("Password", GMAIL_PASSWORD);
    // who to send the email to
    SendEmailChoreo.addInput("ToAddress", TO_EMAIL_ADDRESS);
    // then a subject line
    SendEmailChoreo.addInput("Subject", "ALERT: INTRUDER ALERT!");

     // next comes the message body, the main content of the email   
    SendEmailChoreo.addInput("MessageBody", "INTRUDER ALERT!");

    // tell the Choreo to run and wait for the results. The 
    // return code (returnCode) will tell us whether the Temboo client 
    // was able to send our request to the Temboo servers
    unsigned int returnCode = SendEmailChoreo.run();

    // a return code of zero (0) means everything worked
    if (returnCode == 0) {
        Serial.println("Success! Email sent!");
        
    } else {
      // a non-zero return code means there was an error
      // read and print the error message
      while (SendEmailChoreo.available()) {
        char c = SendEmailChoreo.read();
        Serial.print(c);
      }
    } 
    SendEmailChoreo.close();

    success = true;
  }


    ///////////    SPREADSHEET   ////////////

    Serial.println("Getting sensor value...");

    // get the value we want to append to our spreadsheet
    unsigned long sensorValue = getSensorValue();

    Serial.println("Appending value to spreadsheet...");

    // we need a Process object to send a Choreo request to Temboo
    TembooChoreo AppendRowChoreo;

    // invoke the Temboo client
    // NOTE that the client must be reinvoked and repopulated with
    // appropriate arguments each time its run() method is called.
    AppendRowChoreo.begin();
    
    // set Temboo account credentials
    AppendRowChoreo.setAccountName(TEMBOO_ACCOUNT);
    AppendRowChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);
    AppendRowChoreo.setAppKey(TEMBOO_APP_KEY);
    
    // identify the Temboo Library choreo to run (Google > Spreadsheets > AppendRow)
    AppendRowChoreo.setChoreo("/Library/Google/Spreadsheets/AppendRow");
    
    // set the required Choreo inputs
    // see https://www.temboo.com/library/Library/Google/Spreadsheets/AppendRow/ 
    // for complete details about the inputs for this Choreo
    
    // your Google application client ID
    AppendRowChoreo.addInput("ClientID", CLIENT_ID);
    // your Google application client secert
    AppendRowChoreo.addInput("ClientSecret", CLIENT_SECRET);
    // your Google OAuth refresh token
    AppendRowChoreo.addInput("RefreshToken", REFRESH_TOKEN);

    // the title of the spreadsheet you want to append to
    // NOTE: substitute your own value, retaining the "SpreadsheetTitle:" prefix.
    AppendRowChoreo.addInput("SpreadsheetTitle", SPREADSHEET_TITLE);

    // convert the time and sensor values to a comma separated string
    String rowData(now);
    rowData += ",";
    rowData += sensorValue;

    // add the RowData input item
    AppendRowChoreo.addInput("RowData", rowData);

    // run the Choreo and wait for the results
    // The return code (returnCode) will indicate success or failure 
    unsigned int returnCode = AppendRowChoreo.run();

    // return code of zero (0) means success
    if (returnCode == 0) 
    {
      Serial.println("Success! Appended " + rowData);
      Serial.println("");
    }
    else 
    {
      // return code of anything other than zero means failure  
      // read and display any error messages
      while (AppendRowChoreo.available()) 
      {
        char c = AppendRowChoreo.read();
        Serial.print(c);
      }
    }

    AppendRowChoreo.close();
  }
//}




    
    
  
 else 
  {
    // turn buzzer off:
    digitalWrite(buzzerPin, LOW); 
  }

}

// this function simulates reading the value of a sensor 
unsigned long getSensorValue() 
{
  return analogRead(4);
}
